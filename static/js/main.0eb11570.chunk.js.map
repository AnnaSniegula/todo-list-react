{"version":3,"sources":["Form/styled.js","Form/index.js","List/styled.js","List/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","FormButton","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","value","className","type","placeholder","onChange","target","TasksList","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","remove","List","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","ButtonsContainer","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","Header","header","StyledTitle","h2","Section","title","body","extraHeaderContent","StyledContainer","main","Container","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAaC,IAAOC,KAAV,2OAYVC,EAAQF,IAAOG,MAAV,+HAOLC,EAAaJ,IAAOK,OAAV,8Z,OCURC,EA5BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACd,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAaA,OACE,eAACX,EAAD,CAAYY,SAZO,SAACC,GACpBA,EAAMC,iBAEwB,KAA1BJ,EAAeK,SAGnBP,EAAWE,GACXC,EAAkB,MAKlB,UACE,cAACR,EAAD,CACEa,MAAON,EACPO,UAAU,cACVC,KAAK,OACLC,YAAY,wBACZC,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcV,EAAkBU,EAAOL,UAEnD,cAACX,EAAD,CAAYY,UAAU,eAAtB,+BCxBOK,EAAYrB,IAAOsB,GAAV,yGAMTC,EAAOvB,IAAOwB,GAAV,yNAQX,qBAAGC,QAAuBC,YAAJ,2DAKfC,EAAU3B,IAAO4B,KAAV,mEAGd,qBAAGC,MAAmBH,YAAJ,2EAKXI,EAAS9B,IAAOK,OAAV,mNASb,qBAAE0B,YAA8BL,YAAJ,0PAa5B,qBAAEM,QAAsBN,YAAJ,sPCxBXO,EAzBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACX,cAAChB,EAAD,UACGa,EAAMI,KAAI,SAAAC,GAAI,OACb,eAAChB,EAAD,CAEEE,OAAQc,EAAKV,MAAQM,EAFvB,UAIF,cAACL,EAAD,CAAQC,YAAU,EAChBS,QAAS,kBAAMH,EAAeE,EAAKE,KADrC,SAGGF,EAAKV,KAAO,SAAM,KAErB,cAACF,EAAD,CAASE,KAAMU,EAAKV,KAApB,SACGU,EAAKG,UAER,cAACZ,EAAD,CAAQE,QAAM,EACZQ,QAAS,kBAAMJ,EAAWG,EAAKE,KADjC,4BAXSF,EAAKE,UCJLE,EAAmB3C,IAAO4C,IAAV,uEAKhBd,EAAS9B,IAAOK,OAAV,kiBCcJwC,EAnBC,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUW,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,WAApC,OACZ,cAACJ,EAAD,UACKT,EAAMc,OAAS,GACZ,qCACI,eAAC,EAAD,CAAQR,QAASM,EAAgB9B,UAAU,UAA3C,UACKmB,EAAW,aAAU,QAD1B,qBAGA,cAAC,EAAD,CACIK,QAASO,EACT/B,UAAU,UACViC,SAAUf,EAAMgB,OAAM,qBAAGrB,QAH7B,wCCPHsB,EAAgBnD,IAAOoD,QAAV,oFAKbC,EAASrD,IAAOsD,OAAV,iUAcNC,EAAcvD,IAAOwD,GAAV,kIAMlB,qBAAEtB,OAAoBR,YAAJ,qHCfT+B,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACZ,eAACT,EAAD,WACI,eAAC,EAAD,WACI,cAACI,EAAD,CAAarB,OAAK,EAAlB,SAAoBwB,IACnBE,KAEJD,MCFMN,EANA,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAH,OACb,iCACE,6BAAKA,OCAIG,EAAkB7D,IAAO8D,KAAV,kICMbC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,cAACH,EAAD,UACKG,KCgFMC,MA5Ef,WACE,MAAgCzD,oBAAS,GAAzC,mBAAO2B,EAAP,KAAiB+B,EAAjB,KAQA,EAA0B1D,oBANF,WACtB,IAAM2D,EAAwBC,aAAaC,QAAQ,SACnD,OAAOF,EAAwBG,KAAKC,MAAMJ,GACtC,MAGN,mBAAOjC,EAAP,KAAcsC,EAAd,KAwCA,OAtCAC,qBAAU,WACRL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUzC,MAC5C,CAACA,IAqCF,eAAC,EAAD,WACE,cAAC,EAAD,CAAQwB,MAAM,qBACd,cAAC,EAAD,CAASA,MAAM,qBACbC,KAAM,cAAC,EAAD,CAAMpD,WAfC,SAACmC,GAClB8B,GAAS,SAAAtC,GAAK,4BACTA,GADS,CAEZ,CACEQ,UACAb,MAAM,EACNY,GAAqB,IAAjBP,EAAMc,OAAe,EAAId,EAAMA,EAAMc,OAAS,GAAGP,GAAK,aAW5D,cAAC,EAAD,CAASiB,MAAM,mBACbC,KACE,cAAC,EAAD,CAAMzB,MAAOA,EACXC,SAAUA,EACVC,WAxCS,SAACK,GAClB+B,GAAS,SAAAtC,GAAK,OAAIA,EAAM0C,QAAO,SAAArC,GAAI,OAAIA,EAAKE,KAAOA,SAwC3CJ,eArCa,SAACI,GACtB+B,GAAS,SAAAtC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAC1B,OAAIA,EAAKE,KAAOA,EACP,2BAAKF,GAAZ,IAAkBV,MAAOU,EAAKV,OAEzBU,WAmCLqB,mBACE,cAAC,EAAD,CACE1B,MAAOA,EACPC,SAAUA,EACVW,eApDa,WACrBoB,GAAY,SAAA/B,GAAQ,OAAKA,MAoDjBY,WApCS,WACjByB,GAAS,SAAAtC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCAC3BA,GAD2B,IACrBV,MAAM,mBC9BNgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0eb11570.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    background-color: hsl(0, 0%, 100%);\r\n    border: 0px;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media(max-width:767px) {\r\n        flex-direction: column;  \r\n}\r\n`;\r\n\r\nexport const Input = styled.input` \r\n    border: 2px solid hsl(0, 0%, 93%);\r\n    padding: 10px;\r\n    flex-grow: 1;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background-color: hsl(180, 100%, 25%);\r\n    color: hsl(0, 0%, 100%);\r\n    padding: 10px;\r\n    border: none;\r\n    font-size: 15px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n    transition: 0.5s linear;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(180, 100%, 35%);   \r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { StyledForm, Input, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newTaskContent.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(newTaskContent);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskContent}\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({target}) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton className=\"form__button\">Dodaj zadanie</FormButton>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const TasksList = styled.ul`\r\n    background-color: hsl(0, 0%, 100%);\r\n    padding: 30px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`  \r\n    border-bottom: 1px solid hsl(0, 0%, 93%);\r\n    display: grid;\r\n    align-items: center;\r\n    padding: 5px;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 15px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    border: none;\r\n    color: hsl(0, 0%, 100%);\r\n    margin: 5px;\r\n    text-align: center;\r\n    transition: 0.5s linear;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n    background-color: hsl(120, 100%, 25%);\r\n\r\n        &:hover {\r\n            background-color: hsl(120, 100%, 35%);\r\n        }\r\n\r\n        &:active {\r\n            background-color: hsl(120, 100%, 25%);\r\n        }\r\n\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n    background-color: hsl(0, 100%, 50%);\r\n\r\n        &:hover {\r\n            background-color: hsl(0, 100%, 60%); \r\n        }\r\n\r\n        &:active {\r\n            background-color: hsl(0, 100%, 70%); \r\n        }\r\n\r\n    `}\r\n\r\n`;\r\n\r\n\r\n\r\n","import { TasksList, Item, Content, Button } from \"./styled\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <TasksList>\r\n    {tasks.map(task => (\r\n      <Item\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n       >\r\n    <Button toggleDone\r\n      onClick={() => toggleTaskDone(task.id)}\r\n    >\r\n      {task.done ? \"âœ“\" : \"\"}\r\n    </Button>\r\n    <Content done={task.done}>\r\n      {task.content}\r\n    </Content>\r\n    <Button remove\r\n      onClick={() => removeTask(task.id)}\r\n    >\r\n      ðŸ—‘\r\n    </Button>\r\n      </Item>\r\n))}\r\n  </TasksList >\r\n);\r\n\r\nexport default List;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div` \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: hsl(0, 0%, 100%);\r\n    color: hsl(180, 100%, 25%);\r\n    transition: color 0.3s;\r\n    border: none;\r\n    cursor: pointer;\r\n   \r\n\r\n    @media (max-width: 757px) {\r\n        flex-basis: 100%;\r\n        flex-direction: column;\r\n        padding: 10px;\r\n        align-items: center;  \r\n    }\r\n\r\n         &:hover {\r\n        color: hsl(180, 100%, 35%); \r\n        }\r\n\r\n        &:active {\r\n        color: hsl(180, 100%, 40%);  \r\n        }\r\n\r\n        &:disabled {\r\n        color: hsl(0, 0%, 80%);\r\n        }\r\n`;","import { ButtonsContainer,Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <ButtonsContainer>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone} className=\"buttons\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszytkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: white;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Header = styled.header`  \r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid hsl(0, 0%, 93%);\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 757px) {\r\n        grid-template-columns: 1fr;  \r\n    }\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    padding: 30px;\r\n    margin-bottom: 2px;\r\n\r\n    ${({tasks}) => tasks && css`\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        padding: 0px 20px;\r\n    `}\r\n`;","import { Header, StyledSection, StyledTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <Header>\r\n            <StyledTitle tasks>{title}</StyledTitle>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    font-family: 'Lato', sans-serif;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    padding: 20px;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\nimport List from \"./List\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const getInitialTasks = () => {\n    const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n    return tasksFromLocalStorage ? JSON.parse(tasksFromLocalStorage)\n      : []\n  };\n\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, done: true,\n    })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section title=\"Lista zadaÅ„\"\n        body={\n          <List tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}