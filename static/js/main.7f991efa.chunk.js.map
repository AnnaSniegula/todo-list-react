{"version":3,"sources":["Form/styled.js","Form/index.js","List/styled.js","List/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","colors","white","breakpoints","mobile","Input","input","grey","FormButton","button","teal","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","ref","value","type","placeholder","onChange","target","onClick","current","focus","TasksList","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","green","remove","red","List","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","ButtonsContainer","div","darkGrey","Buttons","toggleHideDone","setAllDone","length","className","disabled","every","StyledSection","section","Header","header","StyledTitle","h2","Section","title","body","extraHeaderContent","StyledContainer","main","Container","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f991efa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    background-color: ${({theme}) => theme.colors.white};\r\n    border: 0px;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media(max-width:${({theme}) => theme.breakpoints.mobile}px) {\r\n        flex-direction: column;  \r\n    }\r\n`;\r\n\r\nexport const Input = styled.input` \r\n    border: 2px solid ${({theme}) => theme.colors.grey};\r\n    padding: 10px;\r\n    flex-grow: 1;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background-color: ${({theme}) => theme.colors.teal};\r\n    color: ${({theme}) => theme.colors.white};\r\n    padding: 10px;\r\n    border: none;\r\n    font-size: 15px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n    transition: 0.5s linear;\r\n\r\n    &:hover {\r\n        filter: brightness(110%); \r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(130%); \r\n    }\r\n`;","import { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newTaskContent.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(newTaskContent);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const TasksList = styled.ul`\r\n    background-color: ${({theme}) => theme.colors.white};\r\n    padding: 30px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`  \r\n    border-bottom: 1px solid ${({theme}) => theme.colors.grey};\r\n    display: grid;\r\n    align-items: center;\r\n    padding: 5px;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 15px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    border: none;\r\n    color: ${({theme}) => theme.colors.white};\r\n    margin: 5px;\r\n    text-align: center;\r\n    transition: 0.5s linear;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n    background-color: ${({theme}) => theme.colors.green};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(130%); \r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n    background-color: ${({theme}) => theme.colors.red};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n\r\n        &:active {\r\n            filter: brightness(150%); \r\n        }\r\n    `}\r\n`;\r\n\r\n\r\n\r\n","import { TasksList, Item, Content, Button } from \"./styled\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <TasksList>\r\n    {tasks.map(task => (\r\n      <Item\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n       >\r\n    <Button toggleDone\r\n      onClick={() => toggleTaskDone(task.id)}\r\n    >\r\n      {task.done ? \"âœ“\" : \"\"}\r\n    </Button>\r\n    <Content done={task.done}>\r\n      {task.content}\r\n    </Content>\r\n    <Button remove\r\n      onClick={() => removeTask(task.id)}\r\n    >\r\n      ðŸ—‘\r\n    </Button>\r\n      </Item>\r\n))}\r\n  </TasksList >\r\n);\r\n\r\nexport default List;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div` \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: ${({theme}) => theme.colors.white};\r\n    color: ${({theme}) => theme.colors.teal};\r\n    transition: color 0.3s;\r\n    border: none;\r\n    cursor: pointer;\r\n   \r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        flex-basis: 100%;\r\n        flex-direction: column;\r\n        padding: 10px;\r\n        align-items: center;  \r\n    }\r\n\r\n         &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n\r\n        &:disabled {\r\n        color: ${({theme}) => theme.colors.darkGrey};\r\n        }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <ButtonsContainer>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone} className=\"buttons\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszytkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({theme}) => theme.colors.white};\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Header = styled.header`  \r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid ${({theme}) => theme.colors.grey};\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;  \r\n    }\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    padding: 30px;\r\n    margin-bottom: 2px;\r\n\r\n    ${({tasks}) => tasks && css`\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        padding: 0px 20px;\r\n    `}\r\n`;","import { Header, StyledSection, StyledTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <Header>\r\n            <StyledTitle tasks>{title}</StyledTitle>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    font-family: 'Lato', sans-serif;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    padding: 20px;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\nimport List from \"./List\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState, useEffect } from \"react\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask } = useTasks();\n\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section title=\"Lista zadaÅ„\"\n        body={\n          <List tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const getInitialTasks = () => {\r\n        const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n        return tasksFromLocalStorage ? JSON.parse(tasksFromLocalStorage)\r\n            : []\r\n    };\r\n\r\n    const [tasks, setTasks] = useState(getInitialTasks);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id))\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n            return task\r\n        }));\r\n    }\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task, done: true,\r\n        })))\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n            },\r\n        ]);\r\n    };\r\n\r\n    return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors:{\r\n     white:\"hsl(0, 0%, 100%)\",  \r\n     grey:\"hsl(0, 0%, 93%)\",\r\n     darkGrey: \"hsl(0, 0%, 80%)\",\r\n     teal:\"hsl(180, 100%, 25%)\",\r\n     green:\"hsl(120, 100%, 25%)\",\r\n     red:\"hsl(0, 100%, 50%)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767\r\n    },\r\n};"],"sourceRoot":""}