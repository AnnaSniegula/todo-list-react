{"version":3,"sources":["reportWebVitals.js","GlobalStyle.js","common/Container/styled.js","common/Container/index.js","common/Header/index.js","common/Section/styled.js","common/Section/index.js","features/author/styled.js","features/author/AuthorPage.js","features/tasks/TasksPage/Form/styled.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/Input/index.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/List/styled.js","routes.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/searchQueryParamName.js","features/tasks/TasksPage/List/index.js","features/tasks/TasksPage/Buttons/styled.js","features/tasks/TasksPage/Button/index.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/Search/styled.js","features/tasks/Search/index.js","features/tasks/TasksPage/FetchExampleTasksButton/index.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/styled.js","features/tasks/TaskPage/index.js","Navigation/styled.js","Navigation/index.js","App.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","store.js","index.js","theme.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","theme","colors","grey","StyledContainer","styled","main","Container","children","Header","title","StyledSection","section","white","header","breakpoints","mobile","StyledTitle","h2","tasks","css","Section","body","extraHeaderContent","Body","div","AuthorPage","StyledForm","form","FormButton","input","button","teal","localStorageKey","saveTasksInLocalStorage","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","getItem","parse","hideDone","loading","reducers","addTask","taskObject","payload","push","toggleHideDone","state","toggleTaskDone","taskId","index","findIndex","id","done","removeTask","splice","setAllDone","fetchExampleTasks","fetchExampleTasksSuccess","fetchExampleTasksError","setTasks","actions","selectTasksState","selectTasks","selectHideDone","selectAreAllTasksDone","every","selectIsAnyTaskDone","some","selectLoading","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trim","content","nanoid","current","focus","ref","value","type","placeholder","onChange","target","StyledLink","Link","black","TasksList","ul","Item","li","hidden","Content","span","Button","toggleDone","green","remove","red","toTask","useQueryParameter","key","location","useLocation","URLSearchParams","search","get","List","query","searchQueryParamName","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","task","onClick","to","ButtonsContainer","darkGrey","Buttons","areAllTasksDone","isAnyTaskDone","length","disabled","Wrapper","replaceQueryParameter","history","useHistory","searchParams","undefined","delete","set","newSearch","toString","pathname","useReplaceQueryParameter","TasksPage","FetchExampleTasksButton","Search","TaskPage","useParams","find","getTaskById","activeClassName","StyledNavLink","NavLink","attrs","Navigation","path","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHendler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.f8175af8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background-color: ${({ theme }) => theme.colors.grey};\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    font-family: 'Lato', sans-serif;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n    padding: 20px;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Header = styled.header`  \r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.grey};\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;  \r\n    }\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    padding: 30px;\r\n    margin-bottom: 2px;\r\n\r\n    ${({ tasks }) => tasks && css`\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n        padding: 0px 20px;\r\n    `}\r\n`;","import { Header, StyledSection, StyledTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <Header>\r\n            <StyledTitle tasks>{title}</StyledTitle>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const Body = styled.div`  \r\n    padding-bottom: 20px;\r\n    margin: 40px;\r\n    text-align: justify;\r\n`;","import StyledContainer from \"../../common/Container\";\r\nimport Header from \"../../common/Header\";\r\nimport Section from \"../../common/Section\";\r\nimport { Body } from \"./styled\";\r\n\r\nexport const AuthorPage = () => (\r\n    <StyledContainer>\r\n        <Header title=\"O autorze\" />\r\n        <Section title=\"Anna Śnieguła\"\r\n            body={<>\r\n                <Body>\r\n                    <p>Szukając nowych ścieżek zawodowych i rozwojowych wybrałam programowanie.\r\n                        Tworzenie czegoś od początku, a przy tym obserwacja wizualnego efektu moich wysiłków, sprawiają mi bardzo dużą satysfakcję. 🔥</p>\r\n                    <p>Godziny spędzone przy komputerze równoważę aktywnością fizyczną.\r\n                        Miesiące ciepłe spędzam na świeżym powietrzu. Lubię biegać, jeździć rowerem, spacerować w lesie i pływać kajakiem.\r\n                        Resztę wolnego czasu pochłaniają mi pszczoły, które hodujemy wraz z mężem 🐝.\r\n                        Czas jesienno-zimowy spędzam głównie w domu czytając książki, ćwicząc jogę i odlewając woskowe świece. Delektuję się przy tym miodem z własnej pasieki i miodem pitnym własnej produkcji. Na zdrowie! 🥃</p>\r\n                </Body>\r\n            </>}\r\n        />\r\n    </StyledContainer>\r\n);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    background-color: ${({theme}) => theme.colors.white};\r\n    border: 0px;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media(max-width:${({theme}) => theme.breakpoints.mobile}px) {\r\n        flex-direction: column;  \r\n    }\r\n`;\r\n\r\nexport const Input = styled.input` \r\n    border: 2px solid ${({theme}) => theme.colors.grey};\r\n    padding: 10px;\r\n    flex-grow: 1;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background-color: ${({theme}) => theme.colors.teal};\r\n    color: ${({theme}) => theme.colors.white};\r\n    padding: 10px;\r\n    border: none;\r\n    font-size: 15px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n    transition: 0.5s linear;\r\n\r\n    &:hover {\r\n        filter: brightness(110%); \r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(130%); \r\n    }\r\n`;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks =>\r\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n\r\nexport const getTasksFromLocalStorage = () => {\r\n    return localStorage.getItem(localStorageKey)\r\n    ? JSON.parse(localStorage.getItem(localStorageKey)) : [];\r\n};\r\n    \r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getTasksFromLocalStorage } from './tasksLocalStorage';\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: getTasksFromLocalStorage(),\r\n        hideDone: false,\r\n        loading: false,\r\n    },\r\n    reducers: {\r\n        addTask: ({ tasks }, { payload: taskObject }) => {\r\n            tasks.push(taskObject);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        toggleTaskDone: ({ tasks }, { payload: taskId }) => {\r\n            const index = tasks.findIndex(({ id }) => id === taskId);\r\n            tasks[index].done = !tasks[index].done;\r\n        },\r\n        removeTask: ({ tasks }, { payload: taskId }) => {\r\n            const index = tasks.findIndex(({ id }) => id === taskId);\r\n            tasks.splice(index, 1);\r\n        },\r\n        setAllDone: ({ tasks }) => {\r\n            for (const task of tasks) {\r\n                task.done = true;\r\n            }\r\n        },\r\n        fetchExampleTasks: state => {\r\n            state.loading = true;\r\n        },\r\n        fetchExampleTasksSuccess: (state, { payload: tasks }) => {\r\n            state.tasks = tasks;\r\n            state.loading = false;\r\n        },\r\n\r\n        fetchExampleTasksError: state => {\r\n            state.loading = false;\r\n        },\r\n\r\n        setTasks: (state, { payload: tasks }) => {\r\n            state.tasks = tasks;\r\n        },\r\n    },\r\n});\r\n\r\n\r\nexport const {\r\n    addTask,\r\n    toggleHideDone,\r\n    toggleTaskDone,\r\n    removeTask,\r\n    setAllDone,\r\n    fetchExampleTasks,\r\n    setTasks,\r\n    fetchExampleTasksSuccess,\r\n    fetchExampleTasksError\r\n} = tasksSlice.actions;\r\n\r\nexport const selectTasksState = state => state.tasks;\r\n\r\nexport const selectTasks = state => selectTasksState(state).tasks;\r\nexport const selectHideDone = state => selectTasksState(state).hideDone;\r\nexport const selectAreAllTasksDone = state => selectTasks(state).every(({ done }) => done);\r\nexport const selectIsAnyTaskDone = state => selectTasks(state).some(({ done }) => done);\r\nexport const selectLoading = state => selectTasksState(state).loading;\r\n\r\nexport const getTaskById = (state, taskId) => selectTasks(state).find(({ id }) => id === taskId);\r\n\r\nexport const selectTasksByQuery = (state, query) => {\r\n    const tasks = selectTasks(state)\r\n    if (!query || query === \"\") {\r\n        return tasks;\r\n    }\r\n    return tasks.filter(({ content }) => content.toUpperCase().includes(query.toUpperCase()));\r\n};\r\n\r\nexport default tasksSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport default styled.input` \r\nborder: 2px solid ${({theme}) => theme.colors.grey};\r\npadding: 10px;\r\nflex-grow: 1;\r\nmargin: 10px;\r\n`;","import { useState, useRef } from \"react\";\r\nimport { StyledForm, FormButton } from \"./styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../../tasksSlice\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport Input from \"../../Input\";\r\n\r\nconst Form = () => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newTaskContent.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    dispatch(addTask({\r\n      content: newTaskContent,\r\n      done: false,\r\n      id: nanoid(),\r\n    }));\r\n\r\n    setNewTaskContent(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <FormButton>Dodaj zadanie</FormButton>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\ntext-decoration: none;\r\ncolor:${({ theme }) => theme.colors.black};\r\n\r\n    &:hover{\r\n        text-decoration: underline;\r\n        color: ${({ theme }) => theme.colors.teal};\r\n    }\r\n`;\r\n\r\nexport const TasksList = styled.ul`\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 30px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`  \r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grey};\r\n    display: grid;\r\n    align-items: center;\r\n    padding: 5px;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 15px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    border: none;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    margin: 5px;\r\n    text-align: center;\r\n    transition: 0.5s linear;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n    background-color: ${({ theme }) => theme.colors.green};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(130%); \r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n    background-color: ${({ theme }) => theme.colors.red};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n\r\n        &:active {\r\n            filter: brightness(130%); \r\n        }\r\n    `}\r\n`;\r\n\r\n\r\n\r\n","export const toTasks = () => \"/zadania\";\r\nexport const toAuthor = () => \"/autor\";\r\n\r\nexport const toTask = ({ id } = { id: \":id\" }) => `/zadania/${id}`;\r\n\r\n","import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParameter = key => {\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    return searchParams.get(key);\r\n}\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    return ({ key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (value === undefined){\r\n            searchParams.delete(key);\r\n        } else {\r\n            searchParams.set(key, value);\r\n        }\r\n\r\n        const newSearch = searchParams.toString();\r\n        history.push(`${location.pathname}?${newSearch}`);\r\n    }\r\n};","export default \"szukaj\";\r\n","import { TasksList, Item, Content, Button, StyledLink } from \"./styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  toggleTaskDone,\r\n  removeTask,\r\n  selectHideDone,\r\n  selectTasksByQuery\r\n} from \"../../tasksSlice\";\r\nimport { toTask } from \"../../../../routes\";\r\nimport { useQueryParameter } from \"../queryParameters\";\r\nimport searchQueryParamName from \"../searchQueryParamName\";\r\n\r\n\r\nconst List = () => {\r\n  const query = useQueryParameter(searchQueryParamName);\r\n  const tasks = useSelector(state => selectTasksByQuery(state, query));\r\n  const hideDone = useSelector(selectHideDone);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <TasksList>\r\n      {tasks.map(task => (\r\n        <Item\r\n          key={task.id}\r\n          hidden={task.done && hideDone}\r\n        >\r\n          <Button toggleDone\r\n            onClick={() => dispatch(toggleTaskDone(task.id))}\r\n          >\r\n            {task.done ? \"✓\" : \"\"}\r\n          </Button>\r\n          <Content done={task.done}>\r\n            <StyledLink to={toTask({ id: task.id })}>{task.content}</StyledLink>\r\n          </Content>\r\n          <Button remove\r\n            onClick={() => dispatch(removeTask(task.id))}\r\n          >\r\n            🗑\r\n          </Button>\r\n        </Item>\r\n      ))}\r\n    </TasksList >\r\n  );\r\n\r\n};\r\nexport default List;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div` \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\nbackground-color: ${({theme}) => theme.colors.white};\r\ncolor: ${({theme}) => theme.colors.teal};\r\ntransition: color 0.3s;\r\nborder: none;\r\ncursor: pointer;\r\n\r\n\r\n@media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    flex-basis: 100%;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    align-items: center;  \r\n}\r\n\r\n&:hover {\r\n    filter: brightness(110%);\r\n}\r\n\r\n&:active {\r\n    filter: brightness(120%);\r\n}\r\n\r\n&:disabled {\r\n    color: ${({theme}) => theme.colors.darkGrey};\r\n}\r\n`;\r\n\r\nexport default Button;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    selectTasks,\r\n    toggleHideDone,\r\n    setAllDone,\r\n    selectHideDone,\r\n    selectAreAllTasksDone,\r\n    selectIsAnyTaskDone\r\n} from \"../../tasksSlice\";\r\nimport { ButtonsContainer } from \"./styled\";\r\nimport Button from \"../Button\";\r\n\r\nconst Buttons = () => {\r\n    const tasks = useSelector(selectTasks);\r\n    const hideDone = useSelector(selectHideDone);\r\n    const areAllTasksDone = useSelector(selectAreAllTasksDone);\r\n    const isAnyTaskDone = useSelector(selectIsAnyTaskDone);\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <ButtonsContainer>\r\n            {tasks.length > 0 && (\r\n                <>\r\n                    <Button onClick={() => dispatch(toggleHideDone())} \r\n                    disabled={!isAnyTaskDone}\r\n                    >\r\n                        {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => dispatch(setAllDone())}\r\n                        disabled={areAllTasksDone}\r\n                    >\r\n                        Ukończ wszytkie\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </ButtonsContainer>\r\n    );\r\n};\r\n\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\npadding: 20px;\r\n`;","import { useQueryParameter, useReplaceQueryParameter } from \"../TasksPage/queryParameters\";\r\nimport Input from \"../Input\";\r\nimport searchQueryParamName from \"../TasksPage/searchQueryParamName\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\n\r\nexport default () => {\r\n\r\n    const query = useQueryParameter(searchQueryParamName);\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n    const onInputChange = ({ target }) => {\r\n        replaceQueryParameter({\r\n            key: searchQueryParamName,\r\n            value: target.value !== \"\" ? target.value : undefined,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Input\r\n                placeholder=\"Filtruj zadania\"\r\n                value={query || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n        </Wrapper>\r\n    );\r\n};","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchExampleTasks, selectLoading } from \"../../tasksSlice\";\r\nimport Button from \"../Button\";\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(selectLoading);\r\n\r\n    return (\r\n        <Button disabled={loading} onClick={() => dispatch(fetchExampleTasks())}>\r\n            {\r\n                loading\r\n                    ? \"Ładowanie...\"\r\n                    : \"Pobierz przykładowe zadania\"\r\n            }\r\n\r\n        </Button>\r\n    );\r\n};","import Form from \"./Form\";\nimport List from \"./List\";\nimport Buttons from \"./Buttons\";\nimport Section from \"../../../common/Section\";\nimport Header from \"../../../common/Header\";\nimport Container from \"../../../common/Container\";\nimport Search from \"../Search\";\nimport FetchExampleTasksButton from \"./FetchExampleTasksButton\";\n\n\nexport const TasksPage = () => {\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n      <Section title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n        extraHeaderContent={<FetchExampleTasksButton />}\n      />\n       <Section title=\"Wyszukiwarka\"\n        body={<Search />}\n      />\n      <Section title=\"Lista zadań\"\n        body={<List />}\n        extraHeaderContent={<Buttons />}\n      />\n    </Container>\n  );\n};\n\n\n","import styled from \"styled-components\";\r\n\r\nexport const Body = styled.div`  \r\n    padding: 30px;\r\n    margin-left: 10px;\r\n`;","import Section from \"../../../common/Section\";\r\nimport Header from \"../../../common/Header\";\r\nimport StyledContainer from \"../../../common/Container\";\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTaskById } from \"../tasksSlice\";\r\nimport { Body } from \"./styled\";\r\n\r\nexport const TaskPage = () => {\r\n    const { id } = useParams();\r\n    const task = useSelector(state => getTaskById(state, id));\r\n    return (\r\n        <StyledContainer>\r\n            <Header title=\"Szczegóły zadania\" />\r\n           \r\n                <Section\r\n                    title={task ? task.content : \"Nie znaleziono zadania\"}\r\n                    body={!!task && (\r\n                        <Body>\r\n                            <strong>Ukończono:</strong> {task.done ? \"Tak\" : \"Nie\"}\r\n                        </Body>\r\n                    )}\r\n                />\r\n           \r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\n\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst activeClassName = \"link-active\";\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\ncolor:${({ theme }) => theme.colors.white};\r\ntext-decoration: none;\r\nfont-size: 20px;\r\n\r\n&.${activeClassName} {\r\n    font-weight: bold;\r\n}\r\n\r\n&:hover {\r\n    border-bottom: 1px solid;\r\n}\r\n`;\r\n\r\nexport const List = styled.ul`\r\nbackground: ${({ theme }) => theme.colors.teal};\r\nmargin: 0;\r\npadding: 0;\r\ndisplay: flex;\r\njustify-content: center;\r\nlist-style: none;\r\nfont-family: 'Lato', sans-serif;\r\n`;\r\n\r\n\r\nexport const Item = styled.li`\r\nmargin: 20px;\r\n`;\r\n\r\n","import { toAuthor, toTasks } from \"../routes\";\r\nimport { StyledNavLink, List, Item } from \"./styled\";\r\n\r\nexport default () => {\r\n    return (\r\n        <nav>\r\n            <List>\r\n                <Item>\r\n                    <StyledNavLink to={toTasks()}>Zadania</StyledNavLink>\r\n                </Item>\r\n                <Item>\r\n                    <StyledNavLink to={toAuthor()}>O autorze</StyledNavLink>\r\n                </Item>\r\n            </List>\r\n        </nav>\r\n    );\r\n};","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AuthorPage } from \"./features/author/AuthorPage\";\r\nimport { TasksPage } from \"./features/tasks/TasksPage\";\r\nimport { TaskPage } from \"./features/tasks/TaskPage\";\r\nimport { toAuthor, toTask, toTasks } from \"./routes\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default () => (\r\n    <HashRouter>\r\n        <Navigation />\r\n        <Switch>\r\n            <Route path={toTask()}>\r\n                <TaskPage />\r\n            </Route>\r\n            <Route path={toTasks()}>\r\n                <TasksPage />\r\n            </Route>\r\n            <Route path={toAuthor()}>\r\n                <AuthorPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Redirect to={toTasks()} />\r\n            </Route>\r\n        </Switch>\r\n    </HashRouter>\r\n);","export const getExampleTasks = async () => {\r\n    const response = await fetch(\"todo-list-react/exampleTasks.json\");\r\n\r\n    if (!response.ok) {\r\n        new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n};","import { takeEvery, takeLatest, call, put, select, delay } from \"redux-saga/effects\";\r\nimport { getExampleTasks } from \"./getExampleTasks\";\r\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\r\nimport { fetchExampleTasks, fetchExampleTasksError, fetchExampleTasksSuccess, selectTasks } from \"./tasksSlice\";\r\n\r\nfunction* fetchExampleTasksHendler() {\r\n    try {\r\n        yield delay(1000);\r\n        const exampleTasks = yield call(getExampleTasks);\r\n        yield put(fetchExampleTasksSuccess(exampleTasks))\r\n    } catch (error) {\r\n        yield put(fetchExampleTasksError());\r\n        yield call(alert, \"Coś poszło nie tak!\");\r\n    }\r\n}\r\n\r\nfunction* saveTasksInLocalStorageHandler() {\r\n    const tasks = yield select(selectTasks);\r\n    yield call(saveTasksInLocalStorage, tasks);\r\n}\r\n\r\nexport function* tasksSaga() {\r\n    yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHendler);\r\n    yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\r\n};","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\n import createSagaMiddleware from '@redux-saga/core';\r\nimport { tasksSaga } from './features/tasks/tasksSaga';\r\n\r\n const sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n    middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(tasksSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport { theme } from \"./theme.js\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors:{\r\n     white:\"hsl(0, 0%, 100%)\",  \r\n     grey:\"hsl(0, 0%, 93%)\",\r\n     darkGrey: \"hsl(0, 0%, 80%)\",\r\n     teal:\"hsl(180, 100%, 25%)\",\r\n     green:\"hsl(120, 100%, 25%)\",\r\n     red:\"hsl(0, 100%, 50%)\",\r\n     black:\"hsl(0, 0%, 0%) \",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767\r\n    },\r\n};"],"sourceRoot":""}