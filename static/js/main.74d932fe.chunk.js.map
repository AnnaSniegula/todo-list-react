{"version":3,"sources":["Form/index.js","List/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","type","placeholder","onChange","target","List","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d932fe.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newTaskContent.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(newTaskContent);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({target}) => setNewTaskContent(target.value)}\r\n      />\r\n      <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"list\">\r\n    {tasks.map(task => (\r\n      <li key={task.id} className={`list__item${task.done && hideDone ? \" list__item--hidden\" : \"\"}`}>\r\n        <button className=\"list__button list__button--done\"\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ“\" : \"\"}\r\n        </button>\r\n        <span className={`list__task${task.done ? \" list__task--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button className=\"list__button list__button--remove\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default List;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button onClick={toggleHideDone} className=\"buttons\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </button>\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszytkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h1 className=\"section__title--tasks\">{title}</h1>\r\n            {extraHeaderContent}\r\n        </header>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\nimport List from \"./List\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\n\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, done: true,\n    })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section title=\"Lista zadaÅ„\"\n        body={\n          <List tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}